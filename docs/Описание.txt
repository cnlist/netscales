Описание протокола 


Вся измерительная система делится на два вида устройств: синхроинзатор (один на всю систему) и измерительные модули (может быть сколько угодно).
Синхронизатор тактирует измерительные модули и рассылает им же синхропакеты, которые содержат уникальный номер очередного пакета с данными.
Этот номер один для всех измерительных модулей, именно он и идет в начале каждого пакета с данными однозначно связывая между собой данные со
всех измерительных модулей. Рассинхронизация между измерительными модулями не более 10 мкс. Пакеты следуют каждые 25 мс, разрывов нет. Разрывы могут появиться при неустойчивой связи с
сервером из-за многократных ретрансляций предыдущего пакета.


Измерительный модуль выступает в роли клиента и пытается подключиться к серверу-сборщику данных по указанным у него в конфиге адресу и порту.
Используется протокол tcp/ip. После установления соединения с сервером, данные льются непрерывно (запросы не нужны).
Из проблем, которые могут возникнуть при приеме потока данных - это фрагментация пакетов при передаче по интерфейсу, поэтому их придется
обрабатывать через буфер, в котором они будут "склеиваться".
Измеритель поднимает на борту и клиента и сервера. Клиент служит для подключения к серверу сбора данных (IP и порт сервера указываются при
конфигурировании измерителя), сервер - для подключения к измерителю для его конфигурирования или обновления прошивки. Измеритель имеет
статический IP. Для упрощения задачи будем считать, что устройство уже сконфигурировано, то есть имеет свой IP, настроены IP и порт сервера-
сборщика данных. После подачи питания на систему все измерители автоматически начинают сбор данных и пытаются их передать на указанный в
настройках сервер и порт. В пакете передаются int'ы


Измеритель имеет 3 канала, накапливает данные за 25 мс и отправляет их на сервер (IP и порт можно указать).
Пакет имеет простой формат: [заголовок][каналы 0..2]...[каналы 0..2][FFFFFFFF]
В заголовке передается длина посылки (16 бит), идентификатор посылки (8 бит), уникальный ID посылки (32 бита, по этому ID осуществляется
"синхронизация" данных от других измерителей); в данных чередуются каналы от 0 до 2, каждый канал 32 бита, завершает пакет число 0xFFFFFFFF.
Длина пакета всегда одинаковая.


Каждый измерительный модуль имеет уникальный IP в рамках сети. Связку из IP адреса и номера канала в модуле можно транслировать в номер канала в
рамках всей системы, который, в свою очередь, связан с положением датчика. 

Каждые 25 мс от всех модулей будет прилетать пакет данных.
Привязка ко времени - это уникальное значение счетчика (всем раздает синхронизатор), которое есть в начале каждого пакета.


Пример пакета
Данные идут в формате "младший байт" - "старший байт"
6302 - длина пакета 0x263 (она всегда одинаковая для этих пакетов) 611 байт вместе с самим полем длины
03 - идентификатор пакета 0x03 (не изменяется для этих пакетов)
2DAB3701 - уникальный номер пакета 0x0137AB2D (стартует с нуля при включении синхронизатора, далее изменяется на 1 с каждым пакетом) - по этой

величине "синхронизируем" пакеты от других модулей
*** измерение 0 ***
26000000 - данные с канала 0 = 0х00000026 (шум)
69D40200 - данные с канала 1 = 0x0002D469 (подключен датчик)
18000000 - данные с канала 2 = 0x00000018 (шум)
*** измерение 1 ***
05000000 - данные с канала 0 = 0х00000005 (шум)
96D30200 - данные с канала 1 = 0x0002D396 (подключен датчик)
0A000000 - данные с канала 2 = 0x0000000A (шум)
.....
*** измерение 49 ***
12000000 - данные с канала 0 = 0х00000012 (шум)
2ED20200 - данные с канала 1 = 0x0002D22E (подключен датчик)
13000000 - данные с канала 2 = 0x00000013 (шум)
FFFFFFFF - конец пакета
 
Хочу обратить внимание, что после установления соединения с сервером первые несколько пакетов могут быть одинаковые (их все в мусор), далее - уже
идут нормальные данные, у которых уникальный идентификатор каждый раз увеличивается на 1.




/*----------------------------------------------------------------------------------------------------------------*/  


/*----------------------------------------------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------------------------------------------*/  





У меня еще одна задача. я хотел бы проконсультироваться у тебя.

я разрабатываю весы дистанционные и мне нужно как-то взаимодействовать с программистами из другой конторы.

Как сделать совместную часть я представляю слабо. Итак: 


Есть большое количество (положим 10000 шт) устройств. Это весы.

На весы заезжает тележка, и начинает загружаться (может сразу, может частями - алгоритм загрузки произвольный) 

 Я достоверно знаю когда тележка заехала на весы и когда выехала. 

Весы подключены  через модемы, шлюзы и т.п. к сети интернет.

Данные от взвешивания  (пока не ясно только сам вес или темп или время) должны попасть на сервер.

От сервера возможны команды на обновление по, вычитку логов, прошлых взвешиваний...и т.п.

Придумал я следующее.

1. Весы должны держать канал с сервером.

2. На сервер должен подаваться сигнал о заезде тележки на весы и съезде оттуда.

3. Весы  содержат sql сервер и предоставляют доступ к своей базе - отвечают на запросы сервера.




Вопросы.

1. Оптимальная ли архитектура?

2. Возможно ли полем из БД определять какой формат данных в других полях , сколько их (аналог заголовка пакета или контейнера)

3. Соединение должно быть защищено - можешь что -либо порекомендовать.




Бд выбрана исходя из того , что программисты сервера скорее всего еще не знают какие данные им нужно забирать  - решил открыть все и дальше пусть сами думают))

+ Вес у меня в "сыром виде" приходит как нагрузка на каждое колесо тележки


и с сырым весом необходимо производить математические манипуляции.

Опять же неизвестно нужно ли передавать вес целиком или поколесно. Так же будет серия флагов в духе - опрокидывали ли тележку или перегревали до того как она попала на весы.


  